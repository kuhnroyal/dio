name: Verify packages abilities

on:
  push:
    branches:
      - main
      - '6.0.0'
    paths-ignore:
      - "**.md"
  pull_request:
    branches:
      - main
      - '6.0.0'
    paths-ignore:
      - "**.md"

# Ensure that new pushes/updates cancel running jobs
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -leo pipefail {0}

jobs:
  workflows:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sdk: [ min, stable, beta ]
    env:
      TEST_PRESET: all
    steps:
      - uses: actions/checkout@v4
      - run: echo $PUB_CACHE
      - uses: subosito/flutter-action@v2
        id: sdk
        with:
          cache: true
          flutter-version: ${{ matrix.sdk == 'min' && '3.10.0' || '' }}
          channel: ${{ matrix.sdk == 'min' && '' || matrix.channel }}
          pub-cache-path: $HOME/.pub-sdk-cache
      - run: echo ${{ steps.sdk.outputs.PUB-CACHE-PATH }}
      - run: echo $PUB_CACHE
      - run: echo "MELOS_SDK_PATH=${{ steps.sdk.outputs.CACHE-PATH }}" >> $GITHUB_ENV
#      - run: dart pub global activate melos
      # Use the stable Dart SDK to run melos with.
      # This is installed after Flutter/Dart so that is last in the $PATH.
      - uses: dart-lang/setup-dart@v1
      - run: echo $PUB_CACHE
#      - run: dart pub get
      - run: dart pub global activate melos
      - name: Remove dio_web_adapter overrides
        # Have to remove this due to https://github.com/invertase/melos/issues/866
        if: ${{ matrix.sdk == 'min' }}
        run: rm -rf plugins/web_adapter
      - name: Melos Bootstrap
        run: melos bs --category ${{ matrix.sdk }}
      - run: echo TARGET_DART_SDK=${{ matrix.sdk }} >> $GITHUB_ENV
      - name: '[Verify step] Format'
        if: ${{ matrix.sdk == 'stable' }}
        run: melos run format
      - name: '[Verify step] Analyze packages'
        if: ${{ matrix.sdk == 'stable' }}
        run: melos run analyze
      - name: '[Verify step] Publish dry-run'
        if: ${{ matrix.sdk == 'stable' }}
        run: melos run publish-dry-run
      # Tests
      - run: ./scripts/prepare_pinning_certs.sh
      - name: Install proxy for tests
        run: sudo apt-get update && sudo apt-get install -y squid mkcert
      - name: Start local httpbun
        run: |
          mkcert -install
          mkcert -cert-file '/tmp/cert.pem' -key-file '/tmp/key.pem' httpbun.local
          echo '127.0.0.1 httpbun.local' | sudo tee --append /etc/hosts
          docker run \
            --name httpbun \
            --detach \
            --publish 443:443 \
            --volume /tmp:/tmp:ro \
            --env HTTPBUN_TLS_CERT=/tmp/cert.pem \
            --env HTTPBUN_TLS_KEY=/tmp/key.pem \
            --pull always \
            sharat87/httpbun
          sleep 1
          curl --fail --silent --show-error https://httpbun.local/any
      - name: Use httpbun.local for tests
        run: melos run httpbun:local
      - name: Determine coverage task suffix
        if: ${{ matrix.sdk == 'stable' }}
        id: coverage
        run: echo "value=:coverage" >> $GITHUB_OUTPUT
      - name: '[Verify step] Test Dart packages [VM]'
        run: melos run test:vm${{ steps.coverage.outputs.value }}
      - name: Use httpbun.com for Web/Flutter tests
        run: melos run httpbun:com
      - name: '[Verify step] Test Dart packages [Chrome]'
        run: melos run test:web:chrome${{ steps.coverage.outputs.value }}
      - name: '[Verify step] Test Dart packages [Firefox]'
        run: melos run test:web:firefox${{ steps.coverage.outputs.value }}
      - name: '[Verify step] Test Flutter packages'
        run: melos run test:flutter${{ steps.coverage.outputs.value }}
      - uses: actions/setup-java@v4
        if: ${{ matrix.sdk == 'stable' }}
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: '[Verify step] Build Flutter APK'
        if: ${{ matrix.sdk == 'stable' }}
        run: melos run build:example:apk
      # Coverage
      - name: '[Coverage] Format & print test coverage'
        if: ${{ matrix.sdk == 'stable' }}
        run: melos run coverage:show
      - name: '[Coverage] Create Report'
        uses: clearlyip/code-coverage-report-action@v5
        id: code_coverage_report
        if: ${{ matrix.sdk == 'stable' && github.actor != 'dependabot[bot]'}}
        with:
          artifact_download_workflow_names: 'Verify packages abilities,coverage_baseline'
          filename: 'coverage/cobertura.xml'
          only_list_changed_files: true
      - name: '[Coverage] Write PR number to file'
        if: ${{ matrix.sdk == 'stable' && github.actor != 'dependabot[bot]'}}
        run: echo ${{ github.event.number }} > pr_number.txt
      - name: '[Coverage] Upload'
        if: ${{ matrix.sdk == 'stable' && github.actor != 'dependabot[bot]'}}
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-results
          path: |
            coverage/cobertura.xml
            code-coverage-results.md
            pr_number.txt
